version: '3.4'

x-app: &app
  restart: unless-stopped
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: '3.0.1'
      PG_MAJOR: '12'
      BUNDLER_VERSION: '2.1.4'
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/bundle
    - packs:/app/public/packs
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
  environment:
    - RAILS_ENV=${RAILS_ENV:-development}
    - REDIS_URL=redis://redis:6379/
    - DATABASE_URL=postgres://postgres:postgres@postgres:5432
    - BOOTSNAP_CACHE_DIR=/bundle/bootsnap
    - WEB_CONCURRENCY=1
    - HISTFILE=/app/log/.bash_history
    - PSQL_HISTFILE=/app/log/.psql_history
    - EDITOR=nano
    - RAILS_SERVE_STATIC_FILES=1
  depends_on:
    - postgres
    - redis

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      #- '${APP_PORT:-3000}:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -p 3000 -b 0.0.0.0"
    ports:
      - '${APP_PORT:-3000}:3000'

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq

  postgres:
    image: postgres:12
    restart: unless-stopped
    volumes:
      - .psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      - PSQL_HISTFILE=/root/log/.psql_history
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432

  redis:
    image: redis:6.0-alpine
    restart: unless-stopped
    volumes:
      - redis:/data

volumes:
  postgres:
  redis:
  bundle:
  rails_cache:
  packs:
